From 4a95172870141e72ed2bb167fa88301c30d0ec80 Mon Sep 17 00:00:00 2001
From: Peter Martienssen <peter.martienssen@liquify-consulting.de>
Date: Fri, 13 Aug 2021 16:44:42 +0200
Subject: [PATCH 2/9] Added RAW8 (grey), RAW10 (y10) and RAW12 (y12) format to
 the tegra framework.

Signed-off-by: Peter Martienssen <peter.martienssen@liquify-consulting.de>
---
 .../platform/tegra/camera/camera_common.c     | 23 ++++++++++++++++---
 .../platform/tegra/camera/sensor_common.c     |  8 +++++++
 .../platform/tegra/camera/vi/vi2_formats.h    |  6 +++++
 3 files changed, 34 insertions(+), 3 deletions(-)

diff --git a/kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c b/kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c
index 7feee1634..f1317349f 100644
--- a/kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c
+++ b/kernel/nvidia/drivers/media/platform/tegra/camera/camera_common.c
@@ -121,6 +121,21 @@ static const struct camera_common_colorfmt camera_common_color_fmts[] = {
 		V4L2_COLORSPACE_SRGB,
 		V4L2_PIX_FMT_VYUY,
 	},
+	{
+		MEDIA_BUS_FMT_Y8_1X8,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_GREY,
+	},
+	{
+		MEDIA_BUS_FMT_Y10_1X10,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_Y10,
+	},
+	{
+		MEDIA_BUS_FMT_Y12_1X12,
+		V4L2_COLORSPACE_RAW,
+		V4L2_PIX_FMT_Y12,
+	},
 	/*
 	 * The below two formats are not supported by VI4,
 	 * keep them at the last to ensure they get discarded
@@ -626,8 +641,10 @@ int camera_common_try_fmt(struct v4l2_subdev *sd, struct v4l2_mbus_framefmt *mf)
 			mf->width = s_data->fmt_width;
 			mf->height = s_data->fmt_height;
 			dev_dbg(sd->dev,
-				"%s: invalid resolution %d x %d\n",
-				__func__, mf->width, mf->height);
+				"%s: invalid resolution %d x %d (expected: %d x %d)\n",
+				__func__, mf->width, mf->height,
+				frmfmt[s_data->sensor_mode_id].size.width,
+				frmfmt[s_data->sensor_mode_id].size.height);
 			goto verify_code;
 		}
 	} else {
@@ -647,7 +664,7 @@ int camera_common_try_fmt(struct v4l2_subdev *sd, struct v4l2_mbus_framefmt *mf)
 		if (i == s_data->numfmts) {
 			mf->width = s_data->fmt_width;
 			mf->height = s_data->fmt_height;
-			dev_dbg(sd->dev,
+			dev_err(sd->dev,
 				"%s: invalid resolution supplied to set mode %d %d\n",
 				__func__, mf->width, mf->height);
 			goto verify_code;
diff --git a/kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c b/kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c
index 32f7c417a..dd040dee2 100644
--- a/kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c
+++ b/kernel/nvidia/drivers/media/platform/tegra/camera/sensor_common.c
@@ -227,6 +227,14 @@ static int extract_pixel_format(
 		*format = V4L2_PIX_FMT_UYVY;
 	else if (strncmp(pixel_t, "yuv_vyuy16", size) == 0)
 		*format = V4L2_PIX_FMT_VYUY;
+	else if (strncmp(pixel_t, "gray", size) == 0)
+		*format = V4L2_PIX_FMT_GREY;
+	else if (strncmp(pixel_t, "y10", size) == 0)
+		*format = V4L2_PIX_FMT_Y10;
+	else if (strncmp(pixel_t, "y12", size) == 0)
+		*format = V4L2_PIX_FMT_Y12;
+	else if (strncmp(pixel_t, "bayer_rggb8", size) == 0)
+		*format = V4L2_PIX_FMT_SRGGB8;
 	else {
 		pr_err("%s: Need to extend format%s\n", __func__, pixel_t);
 		return -EINVAL;
diff --git a/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi2_formats.h b/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi2_formats.h
index fed27b9bf..c1ee0520d 100644
--- a/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi2_formats.h
+++ b/kernel/nvidia/drivers/media/platform/tegra/camera/vi/vi2_formats.h
@@ -81,6 +81,8 @@ static const struct tegra_video_format vi2_video_formats[] = {
 				RAW8, SGBRG8, "GBGB.. RGRG.."),
 	TEGRA_VIDEO_FORMAT(RAW8, 8, SBGGR8_1X8, 1, 1, T_L8,
 				RAW8, SBGGR8, "BGBG.. GRGR.."),
+	TEGRA_VIDEO_FORMAT(RAW8, 8, Y8_1X8, 1, 1, T_L8,
+				RAW8, GREY, "GRAY8"),
 
 	/* RAW 10 */
 	TEGRA_VIDEO_FORMAT(RAW10, 10, SRGGB10_1X10, 2, 1, T_R16_I,
@@ -91,6 +93,8 @@ static const struct tegra_video_format vi2_video_formats[] = {
 				RAW10, SGBRG10, "GBGB.. RGRG.."),
 	TEGRA_VIDEO_FORMAT(RAW10, 10, SBGGR10_1X10, 2, 1, T_R16_I,
 				RAW10, SBGGR10, "BGBG.. GRGR.."),
+	TEGRA_VIDEO_FORMAT(RAW10, 10, Y10_1X10, 2, 1, T_R16_I,
+				RAW10, Y10, "GRAY10"),
 
 	/* RAW 10 Packed format */
 	TEGRA_VIDEO_FORMAT(RAW10, 10, XBGGR10P_3X10, 4, 3, T_X2Lc10Lb10La10,
@@ -107,6 +111,8 @@ static const struct tegra_video_format vi2_video_formats[] = {
 				RAW12, SGBRG12, "GBGB.. RGRG.."),
 	TEGRA_VIDEO_FORMAT(RAW12, 12, SBGGR12_1X12, 2, 1, T_R16_I,
 				RAW12, SBGGR12, "BGBG.. GRGR.."),
+	TEGRA_VIDEO_FORMAT(RAW12, 12, Y12_1X12, 2, 1, T_R16_I,
+				RAW12, Y12, "GRAY12"),
 
 	/* RGB888 */
 	TEGRA_VIDEO_FORMAT(RGB888, 24, RGB888_1X24, 4, 1, T_A8R8G8B8,
-- 
2.25.1

